package org.berendeev.weather.datasources

import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.request.*
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.Json
import javax.inject.Inject

class ForecastDatasource @Inject constructor(private val httpClient: HttpClient) {
    private val json = Json {
        ignoreUnknownKeys = true
    }


    suspend fun fetchForecast(): ApiModel {
        if (true) {
            return json.decodeFromString(mockJsonString)
        }

        // todo map exceptions
        return httpClient.get(
            "https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.41" +
                    "&hourly=temperature_2m" +
                    "&current_weather=true" +
                    "&forecast_days=1"
        ).body()
    }

    @Serializable
    class ApiModel(
        val current_weather: CurrentWeather
    ) {
        @Serializable
        class CurrentWeather(
            val time: String,
            val temperature: Float,
            val weathercode: Int,
            val windspeed: Float,
            val winddirection: Int,
        )
    }
}

private val mockJsonString =
    """
        {"latitude":52.52,"longitude":13.419998,"generationtime_ms":0.14102458953857422,"utc_offset_seconds":0,"timezone":"GMT","timezone_abbreviation":"GMT","elevation":38.0,"current_weather":{"temperature":15.5,"windspeed":16.1,"winddirection":254,"weathercode":2,"is_day":1,"time":"2023-09-23T08:30"},"hourly_units":{"time":"iso8601","temperature_2m":"Â°C"},"hourly":{"time":["2023-09-23T00:00","2023-09-23T01:00","2023-09-23T02:00","2023-09-23T03:00","2023-09-23T04:00","2023-09-23T05:00","2023-09-23T06:00","2023-09-23T07:00","2023-09-23T08:00","2023-09-23T09:00","2023-09-23T10:00","2023-09-23T11:00","2023-09-23T12:00","2023-09-23T13:00","2023-09-23T14:00","2023-09-23T15:00","2023-09-23T16:00","2023-09-23T17:00","2023-09-23T18:00","2023-09-23T19:00","2023-09-23T20:00","2023-09-23T21:00","2023-09-23T22:00","2023-09-23T23:00","2023-09-24T00:00","2023-09-24T01:00","2023-09-24T02:00","2023-09-24T03:00","2023-09-24T04:00","2023-09-24T05:00","2023-09-24T06:00","2023-09-24T07:00","2023-09-24T08:00","2023-09-24T09:00","2023-09-24T10:00","2023-09-24T11:00","2023-09-24T12:00","2023-09-24T13:00","2023-09-24T14:00","2023-09-24T15:00","2023-09-24T16:00","2023-09-24T17:00","2023-09-24T18:00","2023-09-24T19:00","2023-09-24T20:00","2023-09-24T21:00","2023-09-24T22:00","2023-09-24T23:00","2023-09-25T00:00","2023-09-25T01:00","2023-09-25T02:00","2023-09-25T03:00","2023-09-25T04:00","2023-09-25T05:00","2023-09-25T06:00","2023-09-25T07:00","2023-09-25T08:00","2023-09-25T09:00","2023-09-25T10:00","2023-09-25T11:00","2023-09-25T12:00","2023-09-25T13:00","2023-09-25T14:00","2023-09-25T15:00","2023-09-25T16:00","2023-09-25T17:00","2023-09-25T18:00","2023-09-25T19:00","2023-09-25T20:00","2023-09-25T21:00","2023-09-25T22:00","2023-09-25T23:00","2023-09-26T00:00","2023-09-26T01:00","2023-09-26T02:00","2023-09-26T03:00","2023-09-26T04:00","2023-09-26T05:00","2023-09-26T06:00","2023-09-26T07:00","2023-09-26T08:00","2023-09-26T09:00","2023-09-26T10:00","2023-09-26T11:00","2023-09-26T12:00","2023-09-26T13:00","2023-09-26T14:00","2023-09-26T15:00","2023-09-26T16:00","2023-09-26T17:00","2023-09-26T18:00","2023-09-26T19:00","2023-09-26T20:00","2023-09-26T21:00","2023-09-26T22:00","2023-09-26T23:00","2023-09-27T00:00","2023-09-27T01:00","2023-09-27T02:00","2023-09-27T03:00","2023-09-27T04:00","2023-09-27T05:00","2023-09-27T06:00","2023-09-27T07:00","2023-09-27T08:00","2023-09-27T09:00","2023-09-27T10:00","2023-09-27T11:00","2023-09-27T12:00","2023-09-27T13:00","2023-09-27T14:00","2023-09-27T15:00","2023-09-27T16:00","2023-09-27T17:00","2023-09-27T18:00","2023-09-27T19:00","2023-09-27T20:00","2023-09-27T21:00","2023-09-27T22:00","2023-09-27T23:00","2023-09-28T00:00","2023-09-28T01:00","2023-09-28T02:00","2023-09-28T03:00","2023-09-28T04:00","2023-09-28T05:00","2023-09-28T06:00","2023-09-28T07:00","2023-09-28T08:00","2023-09-28T09:00","2023-09-28T10:00","2023-09-28T11:00","2023-09-28T12:00","2023-09-28T13:00","2023-09-28T14:00","2023-09-28T15:00","2023-09-28T16:00","2023-09-28T17:00","2023-09-28T18:00","2023-09-28T19:00","2023-09-28T20:00","2023-09-28T21:00","2023-09-28T22:00","2023-09-28T23:00","2023-09-29T00:00","2023-09-29T01:00","2023-09-29T02:00","2023-09-29T03:00","2023-09-29T04:00","2023-09-29T05:00","2023-09-29T06:00","2023-09-29T07:00","2023-09-29T08:00","2023-09-29T09:00","2023-09-29T10:00","2023-09-29T11:00","2023-09-29T12:00","2023-09-29T13:00","2023-09-29T14:00","2023-09-29T15:00","2023-09-29T16:00","2023-09-29T17:00","2023-09-29T18:00","2023-09-29T19:00","2023-09-29T20:00","2023-09-29T21:00","2023-09-29T22:00","2023-09-29T23:00"],"temperature_2m":[13.9,13.7,13.4,13.0,12.9,12.8,12.7,13.5,15.0,15.8,16.3,17.1,17.9,18.6,18.6,18.1,17.7,16.8,15.6,14.5,13.7,13.3,12.8,12.2,11.9,11.7,11.7,11.8,11.5,11.3,11.5,12.3,13.4,14.5,16.7,17.5,18.4,19.0,19.2,18.9,18.4,16.9,15.4,14.2,13.3,12.7,12.2,11.7,11.3,10.8,10.4,10.1,9.8,9.6,9.9,11.8,13.9,16.1,18.0,19.4,20.2,20.8,20.9,20.7,20.1,18.8,17.3,16.4,15.5,14.8,14.2,13.7,13.3,13.0,12.9,12.5,12.1,11.8,12.0,13.3,15.3,17.2,19.1,20.9,22.3,23.0,23.2,23.0,22.4,21.4,20.5,20.0,19.6,19.2,18.8,18.3,18.0,17.8,17.7,17.5,17.1,16.7,16.5,17.0,17.8,18.4,18.8,19.0,19.3,19.7,20.2,20.2,19.3,18.0,16.7,15.8,15.0,14.3,13.6,13.0,12.6,12.0,11.5,11.1,10.8,10.8,11.3,12.7,14.8,16.8,18.5,20.2,21.4,22.0,22.2,22.0,21.1,19.7,18.5,17.7,17.1,16.5,16.0,15.6,15.3,15.0,14.8,14.6,14.3,14.0,14.4,16.0,18.2,20.0,21.1,21.7,21.7,20.6,18.9,17.5,17.0,16.8,16.6,16.4,16.2,15.8,15.3,14.7]}}
    """.trimIndent()
